#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        next_prev: next_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "NEXT_PREV";
            #binding-cells = <0>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;

            tapping-term-ms = <250>;
        };

        pp_next_prev: pp_next_prev {
            compatible = "zmk,behavior-hold-tap";
            label = "PP_NEXT_PREV";
            bindings = <&kp>, <&next_prev>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <17 5 6 15 16 25 26 35 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        vol_up_down: vol_up_down {
            compatible = "zmk,behavior-tap-dance";
            label = "VOL_UP_DOWN";
            #binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tapping-term-ms = <250>;
        };

        mute_vol_up_down: mute_vol_up_down {
            compatible = "zmk,behavior-hold-tap";
            label = "MUTE_VOL_UP_DOWN";
            bindings = <&kp>, <&vol_up_down>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        out_bt_usb: out_bt_usb {
            compatible = "zmk,behavior-tap-dance";
            label = "OUT_BT_USB";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&out OUT_BLE>, <&out OUT_USB>;
        };

        bt_select: bt_select {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_SELECT";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings =
                <&bt BT_SEL 0>,
                <&bt BT_SEL 1>,
                <&bt BT_SEL 2>,
                <&bt BT_SEL 3>;
        };

        alt_gui_space: alt_gui_space {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_GUI_SPACE";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>, <&kp LG(SPACE)>;

            tapping-term-ms = <250>;
        };
    };

    combos {
        compatible = "zmk,combos";

        o_sq_br {
            bindings = <&kp LBKT>;
            key-positions = <17 16>;
        };

        c_sq_br {
            bindings = <&kp RBKT>;
            key-positions = <17 18>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
        };

        mns {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q          &kp W  &kp E  &kp R             &kp T                          &kp Y  &kp U     &kp I      &kp O    &kp P
  &kp A          &kp S  &kp D  &kp F             &kp G                          &kp H  &kp J     &kp K      &kp L    &kp SEMI
  &hml LSHIFT Z  &kp X  &kp C  &kp V             &kp B                          &kp N  &kp M     &kp COMMA  &kp DOT  &hmr RSHIFT FSLH
                               &kp LEFT_CONTROL  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp RCMD
            >;
        };

        control {
            bindings = <
  &kp ESC       &kp GRAVE         &kp END     &kp HOME      &kp TAB                                &kp PAGE_DOWN         &kp PG_UP                   &kp INSERT  &kp ENTER  &kp BACKSPACE
  &kt LEFT_ALT  &kp LEFT_CONTROL  &kp DELETE  &kp LEFT_WIN  &kp KP_PLUS                            &kp LEFT              &kp DOWN                    &kp UP      &kp RIGHT  &kp SQT
  &trans        &trans            &trans      &trans        &trans                                 &pp_next_prev C_PP 0  &mute_vol_up_down C_MUTE 0  &trans      &trans     &trans
                                              &trans        &trans       &trans    &alt_gui_space  &mo 3                 &trans
            >;
        };

        symbols {
            bindings = <
  &kp N1      &kp N2      &kp N3            &kp N4             &kp N5                        &kp N6      &kp N7      &kp N8      &kp N9      &kp N0
  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)        &kp LS(N4)         &kp LS(N5)                    &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
  &trans      &trans      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS                     &kp BSLH    &kp EQUAL   &trans      &trans      &trans
                                            &trans             &mo 3       &trans    &trans  &trans      &trans
            >;
        };

        adj {
            bindings = <
  &kp F1      &kp F2        &kp F3          &kp F4     &kp F5                            &kp F6          &kp F7          &kp F8        &kp F9           &kp F10
  &kp F12     &msc SCRL_UP  &mkp RCLK       &mkp LCLK  &msc SCRL_DOWN                    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp F11
  &bt_select  &bt BT_CLR    &bt BT_CLR_ALL  &trans     &bootloader                       &trans          &out_bt_usb     &trans        &trans           &studio_unlock
                                            &trans     &trans          &trans    &trans  &trans          &trans
            >;
        };
    };
};
